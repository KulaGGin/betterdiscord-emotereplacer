/**
 * @name EmoteReplacer
 * @version 1.13.1
 * @description Check for known emote names and replace them with an embedded image of the emote. Also supports modifiers similar to BetterDiscord's emotes. Standard emotes: https://yentis.github.io/emotes/
 * @license MIT
 * @author Yentis
 * @authorId 68834122860077056
 * @website https://github.com/Yentis/betterdiscord-emotereplacer
 * @source https://raw.githubusercontent.com/Yentis/betterdiscord-emotereplacer/master/EmoteReplacer.plugin.js
 */
'use strict';

var request = require('request');

var electron = require('electron');

var fs = require('fs');

var path = require('path');

var https = require('https');

var buffer = require('buffer');

class Logger {
    static pluginName;
    static setLogger(pluginName) {
        this.pluginName = pluginName;
    }
    static debug(...args) {
        console.debug(this.pluginName, ...args);
    }
    static info(...args) {
        console.info(this.pluginName, ...args);
    }
    static warn(...args) {
        console.warn(this.pluginName, ...args);
    }
    static error(...args) {
        console.error(this.pluginName, ...args);
    }
}

class RawPlugin {
    meta;
    constructor(meta) {
        this.meta = meta;
        Logger.setLogger(meta.name);
    }
    start() {
        this.showLibraryMissingModal();
    }
    showLibraryMissingModal() {
        BdApi.UI.showConfirmationModal('Library Missing', `The library plugin needed for ${this.meta.name} is missing. ` + 'Please click Download Now to install it.', {
            confirmText: 'Download Now',
            cancelText: 'Cancel',
            onConfirm: () => {
                request.get('https://rauenzi.github.io/BDPluginLibrary/release/0PluginLibrary.plugin.js', undefined, ((error, _response, body) => {
                    if (error !== undefined && error !== null) {
                        electron.shell.openExternal('https://betterdiscord.net/ghdl?url=https://raw.githubusercontent.com/rauenzi' + '/BDPluginLibrary/master/release/0PluginLibrary.plugin.js').catch((error => {
                            Logger.error(error);
                        }));
                        return;
                    }
                    fs.writeFile(path.join(BdApi.Plugins.folder, '0PluginLibrary.plugin.js'), body, (() => {}));
                }));
            }
        });
    }
    stop() {}
}

const PLUGIN_CHANGELOG = [ {
    title: '1.13.1',
    type: 'fixed',
    items: [ 'Fix emote upload not working', 'Fix emotes with reply always pinging even when turned off', 'Fix emotes not working in threads when using split view' ]
}, {
    title: '1.13.0',
    type: 'added',
    items: [ 'It\'s now possible to add custom emotes directly from your PC instead of entering a URL', 'Allow uploading images to channels that don\'t allow external emotes', 'Emotes are now shown as disabled in the reactions menu, as they cannot be used for reacting' ]
}, {
    title: '1.13.0',
    type: 'fixed',
    items: [ 'Custom emote menu no longer shows broken emotes from the standard set', 'Custom emotes starting with numbers or containing spaces can now be removed' ]
} ];

const SETTINGS_KEY = 'settings';

const CURRENT_VERSION_INFO_KEY = 'currentVersionInfo';

const DEFAULT_SETTINGS = {
    emoteSize: 48,
    autocompleteEmoteSize: 15,
    autocompleteItems: 10,
    customEmotes: {},
    requirePrefix: true,
    prefix: ';',
    resizeMethod: 'smallest',
    showStandardEmotes: true
};

class BaseService {
    plugin;
    zeresPluginLibrary;
    constructor(plugin, zeresPluginLibrary) {
        this.plugin = plugin;
        this.zeresPluginLibrary = zeresPluginLibrary;
    }
}

class PromiseUtils {
    static urlGetBuffer(url) {
        if (url.startsWith('http')) return PromiseUtils.httpsGetBuffer(url); else return PromiseUtils.fsGetBuffer(url);
    }
    static async fsGetBuffer(url) {
        const data = fs.readFileSync(url, '');
        return await Promise.resolve(buffer.Buffer.from(data));
    }
    static httpsGetBuffer(url) {
        return new Promise(((resolve, reject) => {
            https.get(url, (res => {
                const buffers = [];
                res.on('data', (chunk => {
                    buffers.push(chunk);
                }));
                res.on('end', (() => {
                    const statusCode = res.statusCode ?? 0;
                    if (statusCode !== 0 && (statusCode < 200 || statusCode >= 400)) {
                        reject(new Error(res.statusMessage));
                        return;
                    }
                    resolve(buffer.Buffer.concat(buffers));
                }));
            })).on('error', (error => {
                reject(error);
            }));
        }));
    }
    static async loadImagePromise(url, waitForLoad = true, element) {
        const image = element ?? new Image;
        const loadPromise = new Promise(((resolve, reject) => {
            image.onload = () => {
                resolve();
            };
            image.onerror = () => {
                reject(new Error(`Failed to load image for url ${url}`));
            };
        }));
        if (url.startsWith('http') && !waitForLoad) {
            image.src = url;
        } else {
            const buffer = await PromiseUtils.urlGetBuffer(url);
            image.src = URL.createObjectURL(new Blob([ buffer ]));
        }
        if (waitForLoad) await loadPromise;
        return image;
    }
    static delay(duration) {
        return new Promise((resolve => {
            setTimeout((() => {
                resolve();
            }), duration);
        }));
    }
    static workerMessagePromise(worker, request) {
        return new Promise(((resolve, reject) => {
            worker.onterminate = () => {
                reject(new Error('Cancelled'));
            };
            worker.onerror = error => {
                reject(error);
            };
            worker.onmessage = message => {
                const response = message.data;
                if (response.type !== request.type) return;
                if (response.data instanceof Error) {
                    reject(response.data);
                } else {
                    resolve(response.data);
                }
            };
            worker.postMessage(request);
        }));
    }
}

class CompletionsService extends BaseService {
    static TAG=CompletionsService.name;
    static TEXTAREA_KEYDOWN_LISTENER='textAreaKeydown';
    static TEXTAREA_WHEEL_LISTENER='textAreaWheel';
    static TEXTAREA_FOCUS_LISTENER='textAreaFocus';
    static TEXTAREA_BLUR_LISTENER='textAreaBlur';
    static AUTOCOMPLETE_DIV_WHEEL_LISTENER='autocompleteDivWheel';
    static EMOTE_ROW_MOUSEENTER_LISTENER='emoteRowMouseenter';
    static EMOTE_ROW_MOUSEDOWN_LISTENER='emoteRowMousedown';
    emoteService;
    settingsService;
    modulesService;
    listenersService;
    htmlService;
    attachService;
    draft='';
    cached;
    curEditor;
    start(emoteService, settingsService, modulesService, listenersService, htmlService, attachService) {
        this.emoteService = emoteService;
        this.settingsService = settingsService;
        this.modulesService = modulesService;
        this.listenersService = listenersService;
        this.htmlService = htmlService;
        this.attachService = attachService;
        this.listenersService.addListenersWatchers[CompletionsService.TAG] = {
            onAddListeners: () => {
                this.addListeners();
            }
        };
        this.addListeners();
        return Promise.resolve();
    }
    addListeners() {
        const editors = this.htmlService.getEditors();
        if (editors.length === 0) return;
        this.curEditor = editors[0];
        this.listenersService.removeListeners(CompletionsService.TEXTAREA_KEYDOWN_LISTENER);
        this.listenersService.removeListeners(CompletionsService.TEXTAREA_WHEEL_LISTENER);
        this.listenersService.removeListeners(CompletionsService.TEXTAREA_FOCUS_LISTENER);
        this.listenersService.removeListeners(CompletionsService.TEXTAREA_BLUR_LISTENER);
        editors.forEach(((editor, index) => {
            const focusListener = {
                element: editor,
                name: 'focus',
                callback: () => {
                    this.curEditor = editor;
                }
            };
            editor.addEventListener(focusListener.name, focusListener.callback);
            this.listenersService.addListener(`${CompletionsService.TEXTAREA_FOCUS_LISTENER}${index}`, focusListener);
            const blurListener = {
                element: editor,
                name: 'blur',
                callback: () => {
                    this.destroyCompletions();
                    this.curEditor = undefined;
                }
            };
            editor.addEventListener(blurListener.name, blurListener.callback);
            this.listenersService.addListener(`${CompletionsService.TEXTAREA_BLUR_LISTENER}${index}`, blurListener);
            const textArea = this.htmlService.getTextAreaField(editor);
            if (!textArea) return;
            const keydownListener = {
                element: textArea,
                name: 'keydown',
                callback: evt => {
                    this.browseCompletions(evt);
                }
            };
            textArea.addEventListener(keydownListener.name, keydownListener.callback);
            this.listenersService.addListener(`${CompletionsService.TEXTAREA_KEYDOWN_LISTENER}${index}`, keydownListener);
            const wheelListener = {
                element: textArea,
                name: 'wheel',
                callback: evt => {
                    this.scrollCompletions(evt);
                }
            };
            textArea.addEventListener(wheelListener.name, wheelListener.callback);
            this.listenersService.addListener(`${CompletionsService.TEXTAREA_WHEEL_LISTENER}${index}`, wheelListener);
        }));
    }
    browseCompletions(event) {
        if (!this.emoteService.shouldCompleteEmote(this.draft) && !this.emoteService.shouldCompleteCommand(this.draft)) {
            return;
        }
        let delta = 0, options;
        const autocompleteItems = Math.round(this.settingsService.settings.autocompleteItems);
        switch (event.which) {
          case 9:
          case 13:
            if (!this.prepareCompletions()) {
                break;
            }
            event.stopPropagation();
            event.preventDefault();
            this.insertSelectedCompletion().catch((error => Logger.error(error)));
            break;

          case 38:
            delta = -1;
            break;

          case 40:
            delta = 1;
            break;

          case 33:
            delta = -autocompleteItems;
            options = {
                locked: true,
                clamped: true
            };
            break;

          case 34:
            delta = autocompleteItems;
            options = {
                locked: true,
                clamped: true
            };
            break;
        }
        if (delta !== 0 && this.prepareCompletions()) {
            event.stopPropagation();
            event.preventDefault();
            this.scrollWindow(delta, options);
        }
    }
    prepareCompletions() {
        const candidateText = this.draft;
        const lastText = this.cached?.candidateText;
        if (lastText !== candidateText) {
            if (this.emoteService.shouldCompleteEmote(candidateText)) {
                const {completions, matchText, matchStart} = this.emoteService.getCompletionsEmote(candidateText);
                this.cached = {
                    candidateText,
                    completions,
                    matchText,
                    matchStart,
                    selectedIndex: 0,
                    windowOffset: 0
                };
            } else if (this.emoteService.shouldCompleteCommand(candidateText)) {
                const {completions, matchText, matchStart} = this.emoteService.getCompletionsCommands(candidateText);
                this.cached = {
                    candidateText,
                    completions,
                    matchText,
                    matchStart,
                    selectedIndex: 0,
                    windowOffset: 0
                };
            }
        }
        const {completions} = this.cached ?? {};
        return completions !== undefined && completions.length !== 0;
    }
    async insertSelectedCompletion() {
        const {completions, matchText, selectedIndex} = this.cached ?? {};
        const curDraft = this.draft;
        const matchTextLength = matchText?.length ?? 0;
        const channelId = this.attachService.curChannelId;
        if (completions === undefined || selectedIndex === undefined || channelId === undefined) {
            return;
        }
        this.modulesService.draft.clearDraft(channelId, 0);
        await PromiseUtils.delay(100);
        const selectedCompletion = completions[selectedIndex];
        if (!selectedCompletion) return;
        const completionValueArguments = typeof selectedCompletion.data === 'string' ? undefined : selectedCompletion.data.arguments;
        let suffix = ' ';
        if (completionValueArguments) {
            const argumentOptional = completionValueArguments.some((argument => argument === ''));
            if (!argumentOptional) suffix = '-';
        }
        selectedCompletion.name += suffix;
        const newDraft = curDraft.substring(0, curDraft.length - matchTextLength);
        this.destroyCompletions();
        await PromiseUtils.delay(0);
        this.modulesService.componentDispatcher.dispatchToLastSubscribed('INSERT_TEXT', {
            plainText: newDraft + selectedCompletion.name
        });
    }
    destroyCompletions() {
        const textAreaContainer = this.htmlService.getTextAreaContainer(this.curEditor);
        if (textAreaContainer) {
            const completions = this.htmlService.getTextAreaContainer(this.curEditor)?.querySelectorAll(`.${this.plugin.meta.name}`);
            completions?.forEach((completion => {
                completion.remove();
            }));
        }
        this.cached = undefined;
        this.renderCompletions.cancel();
    }
    renderCompletions=_.debounce((() => {
        const channelTextArea = this.htmlService.getTextAreaContainer(this.curEditor);
        if (!channelTextArea) return;
        const oldAutoComplete = channelTextArea?.querySelectorAll(`.${this.plugin.meta.name}`) ?? [];
        const discordClasses = this.modulesService.classes;
        const isEmote = this.emoteService.shouldCompleteEmote(this.draft);
        for (const autoComplete of oldAutoComplete) {
            autoComplete.remove();
        }
        if (!this.emoteService.shouldCompleteEmote(this.draft) && !this.emoteService.shouldCompleteCommand(this.draft) || !this.prepareCompletions()) {
            return;
        }
        const {completions, matchText, selectedIndex} = this.cached ?? {};
        const firstIndex = this.cached?.windowOffset ?? 0;
        const matchList = completions?.slice(firstIndex, firstIndex + Math.round(this.settingsService.settings.autocompleteItems));
        const autocompleteDiv = document.createElement('div');
        this.htmlService.addClasses(autocompleteDiv, discordClasses.Autocomplete.autocomplete, this.plugin.meta.name);
        const autocompleteListener = {
            element: autocompleteDiv,
            name: 'wheel',
            callback: evt => {
                this.scrollCompletions(evt, {
                    locked: true
                });
            }
        };
        autocompleteDiv.addEventListener(autocompleteListener.name, autocompleteListener.callback);
        this.listenersService.addListener(CompletionsService.AUTOCOMPLETE_DIV_WHEEL_LISTENER, autocompleteListener);
        channelTextArea.append(autocompleteDiv);
        const autocompleteInnerDiv = document.createElement('div');
        this.htmlService.addClasses(autocompleteInnerDiv, discordClasses.Autocomplete.autocompleteInner);
        autocompleteDiv.append(autocompleteInnerDiv);
        const titleRow = document.createElement('div');
        this.htmlService.addClasses(titleRow, discordClasses.Autocomplete.autocompleteRowVertical);
        autocompleteInnerDiv.append(titleRow);
        const selector = document.createElement('div');
        this.htmlService.addClasses(selector, discordClasses.Autocomplete.base);
        titleRow.append(selector);
        const contentTitle = document.createElement('h3');
        this.htmlService.addClasses(contentTitle, discordClasses.Autocomplete.contentTitle, discordClasses.Wrapper.base, discordClasses.Size.size12);
        contentTitle.innerText = isEmote ? 'Emoji matching ' : 'Commands ';
        selector.append(contentTitle);
        const matchTextElement = document.createElement('strong');
        matchTextElement.textContent = matchText ?? '';
        contentTitle.append(matchTextElement);
        for (const [index, {name, data}] of matchList?.entries() ?? []) {
            const emoteRow = document.createElement('div');
            emoteRow.setAttribute('aria-disabled', 'false');
            this.htmlService.addClasses(emoteRow, discordClasses.Autocomplete.clickable, discordClasses.Autocomplete.autocompleteRowVertical, discordClasses.Autocomplete.autocompleteRowVerticalSmall);
            const mouseEnterListener = {
                element: emoteRow,
                name: 'mouseenter',
                callback: () => {
                    if (!this.cached) this.cached = {};
                    this.cached.selectedIndex = index + firstIndex;
                    for (const child of titleRow.parentElement?.children ?? []) {
                        child.setAttribute('aria-selected', 'false');
                        for (const nestedChild of child.children) {
                            this.htmlService.addClasses(nestedChild, discordClasses.Autocomplete.base);
                        }
                    }
                }
            };
            emoteRow.addEventListener(mouseEnterListener.name, mouseEnterListener.callback);
            this.listenersService.addListener(`${CompletionsService.EMOTE_ROW_MOUSEENTER_LISTENER}${index}`, mouseEnterListener);
            const mouseDownListener = {
                element: emoteRow,
                name: 'mousedown',
                callback: evt => {
                    evt.preventDefault();
                    if (!this.cached) this.cached = {};
                    this.cached.selectedIndex = index + firstIndex;
                    this.insertSelectedCompletion().catch((error => Logger.error(error)));
                }
            };
            emoteRow.addEventListener(mouseDownListener.name, mouseDownListener.callback);
            this.listenersService.addListener(`${CompletionsService.EMOTE_ROW_MOUSEDOWN_LISTENER}${index}`, mouseDownListener);
            autocompleteInnerDiv.append(emoteRow);
            const emoteSelector = document.createElement('div');
            this.htmlService.addClasses(emoteSelector, discordClasses.Autocomplete.base);
            emoteRow.append(emoteSelector);
            if (index + firstIndex === selectedIndex) {
                emoteRow.setAttribute('aria-selected', 'true');
            }
            const emoteContainer = document.createElement('div');
            this.htmlService.addClasses(emoteContainer, discordClasses.Autocomplete.autocompleteRowContent);
            emoteSelector.append(emoteContainer);
            if (isEmote) {
                const containerIcon = document.createElement('div');
                this.htmlService.addClasses(containerIcon, discordClasses.Autocomplete.autocompleteRowIcon);
                emoteContainer.append(containerIcon);
                const settingsAutocompleteEmoteSize = this.settingsService.settings.autocompleteEmoteSize;
                const containerImage = document.createElement('img');
                containerImage.alt = name;
                containerImage.title = name;
                containerImage.style.minWidth = `${Math.round(settingsAutocompleteEmoteSize)}px`;
                containerImage.style.minHeight = `${Math.round(settingsAutocompleteEmoteSize)}px`;
                containerImage.style.width = `${Math.round(settingsAutocompleteEmoteSize)}px`;
                containerImage.style.height = `${Math.round(settingsAutocompleteEmoteSize)}px`;
                this.htmlService.addClasses(containerImage, discordClasses.Autocomplete.emojiImage);
                containerIcon.append(containerImage);
                if (typeof data === 'string') {
                    PromiseUtils.loadImagePromise(data, false, containerImage).catch((error => Logger.error(error)));
                }
            }
            const containerContent = document.createElement('div');
            containerContent.style.color = 'var(--interactive-active)';
            this.htmlService.addClasses(containerContent, discordClasses.Autocomplete.autocompleteRowContentPrimary);
            emoteContainer.append(containerContent);
            if (isEmote || typeof data === 'string') {
                containerContent.textContent = name;
            } else {
                containerContent.style.display = 'flex';
                containerContent.style.flexDirection = 'column';
                const containerContentName = document.createElement('span');
                containerContentName.style.paddingBottom = '0.5em';
                containerContentName.textContent = name;
                containerContent.append(containerContentName);
                const containerContentInfo = document.createElement('span');
                containerContentInfo.style.color = 'var(--interactive-normal)';
                containerContentInfo.textContent = data.info;
                containerContent.append(containerContentInfo);
            }
        }
    }), 250);
    scrollCompletions(e, options) {
        const delta = Math.sign(e.deltaY);
        this.scrollWindow(delta, options);
    }
    scrollWindow(delta, {locked = false, clamped = false} = {}) {
        if (!this.cached) return;
        const preScroll = 2;
        const {completions, selectedIndex: prevSel, windowOffset} = this.cached;
        const autocompleteItems = Math.round(this.settingsService.settings.autocompleteItems);
        if (!completions) {
            return;
        }
        const num = completions.length;
        let sel = (prevSel ?? 0) + delta;
        if (clamped) {
            sel = _.clamp(sel, 0, num - 1);
        } else {
            sel = sel % num + (sel < 0 ? num : 0);
        }
        this.cached.selectedIndex = sel;
        const boundLower = _.clamp(sel + preScroll - (autocompleteItems - 1), 0, num - autocompleteItems);
        const boundUpper = _.clamp(sel - preScroll, 0, num - autocompleteItems);
        this.cached.windowOffset = _.clamp((windowOffset ?? 0) + (locked ? delta : 0), boundLower, boundUpper);
        this.renderCompletions();
        this.renderCompletions.flush();
    }
    stop() {
        this.draft = '';
        this.cached = undefined;
        this.curEditor = undefined;
    }
}

class EmoteService extends BaseService {
    listenersService;
    settingsService;
    htmlService;
    emoteNames;
    modifiers=[];
    start(listenersService, settingsService, htmlService) {
        this.listenersService = listenersService;
        this.settingsService = settingsService;
        this.htmlService = htmlService;
        this.initEmotes();
        return Promise.resolve();
    }
    initEmotes() {
        Promise.all([ this.getEmoteNames(), this.getModifiers() ]).then((([emoteNames, modifiers]) => {
            this.setEmoteNames(emoteNames);
            this.modifiers = modifiers;
            if (this.htmlService.getEditors().length > 0) {
                this.listenersService.requestAddListeners(CompletionsService.TAG);
            }
        })).catch((error => {
            Logger.warn('Failed to get emote names and/or modifiers', error);
        }));
    }
    refreshEmotes() {
        this.emoteNames = undefined;
        BdApi.UI.showToast('Reloading emote database...', {
            type: 'info'
        });
        this.getEmoteNames().then((names => {
            this.setEmoteNames(names);
            BdApi.UI.showToast('Emote database reloaded!', {
                type: 'success'
            });
        })).catch((error => {
            Logger.warn('Failed to get emote names', error);
        }));
    }
    async getEmoteNames() {
        if (!this.settingsService.settings.showStandardEmotes) {
            return {};
        }
        const data = await PromiseUtils.urlGetBuffer('https://raw.githubusercontent.com/Yentis/yentis.github.io/master/emotes/emotes.json');
        const emoteNames = JSON.parse(data.toString());
        Object.keys(emoteNames).forEach((key => {
            const split = emoteNames[key]?.split('.');
            const [name, extension] = split ?? [];
            delete emoteNames[key];
            if (name === undefined || extension === undefined) return;
            emoteNames[name] = 'https://raw.githubusercontent.com/Yentis/yentis.github.io/master/emotes' + `/images/${key}.${extension}`;
        }));
        return emoteNames;
    }
    setEmoteNames(emoteNames) {
        const customEmotes = {};
        Object.entries(this.settingsService.settings.customEmotes).forEach((([name, url]) => {
            customEmotes[this.getPrefixedName(name)] = url;
        }));
        const standardNames = {};
        Object.entries(emoteNames).forEach((([name, url]) => {
            const prefixedName = this.getPrefixedName(name);
            standardNames[prefixedName] = url;
        }));
        this.emoteNames = {
            ...standardNames,
            ...customEmotes
        };
    }
    async getModifiers() {
        const data = await PromiseUtils.urlGetBuffer('https://raw.githubusercontent.com/Yentis/betterdiscord-emotereplacer/master/modifiers.json');
        return JSON.parse(data.toString());
    }
    getPrefixedName(name) {
        const settingsPrefix = this.settingsService.settings.prefix;
        if (name.toLowerCase().startsWith(settingsPrefix)) {
            name = name.replace(settingsPrefix, '');
        }
        return `${settingsPrefix}${name}`;
    }
    shouldCompleteEmote(input) {
        const prefix = this.settingsService.settings.requirePrefix ? this.escapeRegExp(this.settingsService.settings.prefix) : '';
        return new RegExp('(?:^|\\s)' + prefix + '\\w{2,}$').test(input);
    }
    shouldCompleteCommand(input) {
        return this.getRegexCommand().test(input);
    }
    escapeRegExp(input) {
        return input.replace(/[-\\/\\^$*+?.()|[\]{}]/g, '\\$&');
    }
    getRegexCommand() {
        const prefix = this.settingsService.settings.requirePrefix ? this.escapeRegExp(this.settingsService.settings.prefix) : '';
        return new RegExp('((?<!\\/)(?:' + prefix + '|<)[\\w:>]*\\.)([\\w\\.-]*)$');
    }
    getCompletionsEmote(text) {
        const settingsPrefix = this.settingsService.settings.prefix;
        const prefix = this.settingsService.settings.requirePrefix ? this.escapeRegExp(settingsPrefix) : '';
        const match = text.match(new RegExp('(^|\\s)(' + prefix + '\\w{2,})$'));
        if (match === null) {
            return {
                completions: [],
                matchText: undefined,
                matchStart: -1
            };
        }
        const emoteArray = [];
        Object.entries(this.emoteNames ?? {}).forEach((([key, value]) => {
            emoteArray.push({
                name: key,
                data: value
            });
        }));
        const matchText = (match[2] ?? '').toLowerCase();
        const completions = emoteArray.filter((emote => {
            const matchWithoutPrefix = matchText.startsWith(settingsPrefix) ? matchText.replace(settingsPrefix, '') : matchText;
            if (emote.name.toLowerCase().search(matchWithoutPrefix) !== -1) {
                return emote;
            } else {
                return false;
            }
        }));
        const matchIndex = match.index ?? 0;
        const matchFirst = match[1] ?? '';
        const matchStart = matchIndex + matchFirst.length;
        return {
            completions,
            matchText,
            matchStart
        };
    }
    getCompletionsCommands(text) {
        const regex = this.getRegexCommand();
        const match = text.match(regex);
        if (match === null) {
            return {
                completions: [],
                matchText: undefined,
                matchStart: -1
            };
        }
        const commandPart = match[2]?.substring(match[2].lastIndexOf('.') + 1) ?? '';
        const commandArray = [];
        this.modifiers.forEach((modifier => {
            commandArray.push({
                name: modifier.name,
                data: modifier
            });
        }));
        const completions = commandArray.filter((command => commandPart === '' || command.name.toLowerCase().search(commandPart) !== -1));
        const matchText = commandPart;
        const matchIndex = match.index ?? 0;
        const matchZero = match[0] ?? '';
        const matchStart = matchIndex + matchZero.length;
        return {
            completions,
            matchText,
            matchStart
        };
    }
    stop() {
        this.emoteNames = undefined;
        this.modifiers = [];
    }
}

class AttachService extends BaseService {
    modulesService;
    canAttach=false;
    externalEmotes=new Set;
    userId;
    curChannelId;
    pendingUpload;
    pendingReply;
    onMessagesLoaded;
    onChannelSelect;
    async start(modulesService) {
        this.modulesService = modulesService;
        this.userId = await this.getUserId();
    }
    getUserId() {
        return new Promise((resolve => {
            const getCurrentUser = this.modulesService.userStore.getCurrentUser;
            let user = getCurrentUser();
            if (user) {
                resolve(user.id);
                return;
            }
            this.onMessagesLoaded = () => {
                user = getCurrentUser();
                const userId = user?.id ?? '';
                if (this.onMessagesLoaded) {
                    this.modulesService.dispatcher.unsubscribe('LOAD_MESSAGES_SUCCESS', this.onMessagesLoaded);
                    this.onMessagesLoaded = undefined;
                }
                if (!userId) return;
                resolve(userId);
            };
            this.modulesService.dispatcher.subscribe('LOAD_MESSAGES_SUCCESS', this.onMessagesLoaded);
        }));
    }
    setCanAttach(_channelId) {
        if (_channelId !== undefined && _channelId === this.curChannelId) return;
        this.externalEmotes.clear();
        const channelId = _channelId ?? '';
        if (!channelId) {
            this.canAttach = true;
            return;
        }
        if (this.userId === undefined) {
            this.canAttach = true;
            return;
        }
        const channel = this.modulesService.channelStore.getChannel(channelId);
        if (!channel) {
            this.canAttach = true;
            return;
        }
        const guildId = channel.guild_id ?? '';
        if (!guildId) {
            this.canAttach = true;
            return;
        }
        const permissions = this.modulesService.discordPermissions;
        this.canAttach = this.modulesService.permissions.can(permissions.ATTACH_FILES, channel, this.userId);
        this.curChannelId = channelId;
    }
    stop() {
        if (this.onMessagesLoaded) {
            this.modulesService.dispatcher.unsubscribe('LOAD_MESSAGES_SUCCESS', this.onMessagesLoaded);
            this.onMessagesLoaded = undefined;
        }
        if (this.onChannelSelect) {
            this.modulesService.dispatcher.unsubscribe('CHANNEL_SELECT', this.onChannelSelect);
            this.onChannelSelect = undefined;
        }
        this.canAttach = false;
        this.pendingUpload = undefined;
    }
}

class SettingsService extends BaseService {
    static ADD_BUTTON_CLICK_LISTENER='addButtonClick';
    static REFRESH_BUTTON_CLICK_LISTENER='refreshButtonClick';
    static DELETE_BUTTON_CLICK_LISTENER='deleteButtonClick';
    listenersService;
    settings=DEFAULT_SETTINGS;
    start(listenersService) {
        this.listenersService = listenersService;
        const savedSettings = BdApi.Data.load(this.plugin.meta.name, SETTINGS_KEY);
        this.settings = Object.assign({}, DEFAULT_SETTINGS, savedSettings);
        return Promise.resolve();
    }
    getSettingsElement() {
        const emoteService = this.plugin.emoteService;
        if (!emoteService) return new HTMLElement;
        const Settings = this.zeresPluginLibrary.Settings;
        const settings = [];
        this.pushRegularSettings(settings, emoteService);
        const emoteFolderPicker = document.createElement('input');
        emoteFolderPicker.type = 'file';
        emoteFolderPicker.multiple = true;
        emoteFolderPicker.accept = '.png,.gif';
        let emoteName;
        const emoteNameTextbox = new Settings.Textbox(undefined, 'Emote name', undefined, (val => {
            emoteName = val;
        }));
        let imageUrl;
        const imageUrlTextbox = new Settings.Textbox(undefined, 'Image URL (must end with .gif or .png, 128px recommended)', undefined, (val => {
            imageUrl = val;
        }));
        const addButton = document.createElement('button');
        addButton.type = 'button';
        addButton.classList.add('bd-button');
        addButton.textContent = 'Add';
        const addSettingField = new Settings.SettingField(undefined, undefined, undefined, addButton);
        const customEmotesContainer = document.createElement('div');
        const addListener = {
            element: addButton,
            name: 'click',
            callback: () => {
                const files = emoteFolderPicker.files ?? [];
                const addPromises = (files.length > 0 ? Array.from(files).map((file => {
                    const fileName = file.name.substring(0, file.name.lastIndexOf('.'));
                    return this.addEmote(fileName, file.path);
                })) : [ this.addEmote(emoteName, imageUrl) ]).map((async promise => {
                    const emoteName = await promise;
                    customEmotesContainer.append(this.createCustomEmoteContainer(emoteName, emoteService));
                }));
                Promise.allSettled(addPromises).then((results => {
                    const errors = [];
                    results.forEach((result => {
                        if (result.status === 'fulfilled') return;
                        errors.push(result.reason);
                        Logger.error(result.reason);
                    }));
                    const firstError = errors[0];
                    if (firstError) {
                        BdApi.UI.showToast(`${firstError.message}${errors.length > 1 ? '\nSee console for all errors' : ''}`, {
                            type: 'error'
                        });
                        if (addPromises.length === 1) return;
                    }
                    emoteFolderPicker.value = '';
                    const emoteNameTextboxInput = emoteNameTextbox.getElement().querySelector('input');
                    if (emoteNameTextboxInput) emoteNameTextboxInput.value = '';
                    const imageUrlTextboxInput = imageUrlTextbox.getElement().querySelector('input');
                    if (imageUrlTextboxInput) imageUrlTextboxInput.value = '';
                    BdApi.Data.save(this.plugin.meta.name, SETTINGS_KEY, this.settings);
                    BdApi.UI.showToast('Emote(s) have been saved', {
                        type: 'success'
                    });
                })).catch((error => {
                    BdApi.UI.showToast(error.message, {
                        type: 'error'
                    });
                }));
            }
        };
        addButton.addEventListener(addListener.name, addListener.callback);
        this.listenersService.addListener(SettingsService.ADD_BUTTON_CLICK_LISTENER, addListener);
        Object.keys(this.settings.customEmotes).forEach((key => {
            customEmotesContainer.append(this.createCustomEmoteContainer(key, emoteService));
        }));
        const customEmoteGroup = new Settings.SettingGroup('Custom emotes');
        customEmoteGroup.append(emoteFolderPicker, emoteNameTextbox, imageUrlTextbox, addSettingField, customEmotesContainer);
        settings.push(customEmoteGroup);
        const refreshButton = document.createElement('button');
        refreshButton.type = 'button';
        refreshButton.classList.add('bd-button');
        refreshButton.textContent = 'Refresh emote list';
        const refreshSettingField = new Settings.SettingField(undefined, undefined, undefined, refreshButton);
        const refreshListener = {
            element: refreshButton,
            name: 'click',
            callback: () => {
                emoteService.refreshEmotes();
            }
        };
        refreshButton.addEventListener(refreshListener.name, refreshListener.callback);
        this.listenersService.addListener(SettingsService.REFRESH_BUTTON_CLICK_LISTENER, refreshListener);
        settings.push(refreshSettingField);
        return Settings.SettingPanel.build((() => {
            BdApi.Data.save(this.plugin.meta.name, SETTINGS_KEY, this.settings);
        }), ...settings);
    }
    async addEmote(emoteName, imageUrl) {
        if (!emoteName) throw new Error('No emote name entered!');
        if (!imageUrl) throw new Error('No image URL entered!');
        if (!imageUrl.endsWith('.gif') && !imageUrl.endsWith('.png')) {
            throw new Error('Image URL must end with .gif or .png!');
        }
        const emoteService = this.plugin.emoteService;
        if (!emoteService) throw new Error('Emote service not found');
        const emoteNames = emoteService.emoteNames ?? {};
        const targetEmoteName = emoteNames[emoteService.getPrefixedName(emoteName)] ?? '';
        if (targetEmoteName) throw new Error('Emote name already exists!');
        this.settings.customEmotes[emoteName] = imageUrl;
        emoteNames[emoteService.getPrefixedName(emoteName)] = imageUrl;
        emoteService.emoteNames = emoteNames;
        return await Promise.resolve(emoteName);
    }
    pushRegularSettings(settings, emoteService) {
        const Settings = this.zeresPluginLibrary.Settings;
        settings.push(new Settings.Slider('Emote Size', 'The size of emotes. (default 48)', 32, 128, this.settings.emoteSize, (val => {
            this.settings.emoteSize = Math.round(val);
        }), {
            units: 'px',
            markers: [ 32, 48, 64, 96, 128 ]
        }));
        settings.push(new Settings.Slider('Autocomplete Emote Size', 'The size of emotes in the autocomplete window. (default 15)', 15, 64, this.settings.autocompleteEmoteSize, (val => {
            this.settings.autocompleteEmoteSize = Math.round(val);
        }), {
            units: 'px',
            markers: [ 15, 32, 48, 64 ]
        }));
        settings.push(new Settings.Slider('Autocomplete Items', 'The amount of emotes shown in the autocomplete window. (default 10)', 1, 25, this.settings.autocompleteItems, (val => {
            this.settings.autocompleteItems = Math.round(val);
        }), {
            units: ' items',
            markers: [ 1, 5, 10, 15, 20, 25 ]
        }));
        settings.push(new Settings.Switch('Require prefix', 'If this is enabled, ' + 'the autocomplete list will not be shown unless the prefix is also typed.', this.settings.requirePrefix, (checked => {
            this.settings.requirePrefix = checked;
        })));
        settings.push(new Settings.Switch('Show standard custom emotes', 'If this is enabled, the standard custom emotes will be visible.', this.settings.showStandardEmotes, (checked => {
            this.settings.showStandardEmotes = checked;
            emoteService.refreshEmotes();
        })));
        settings.push(new Settings.Textbox('Prefix', 'The prefix to check against for the above setting. ' + 'It is recommended to use a single character not in use by other chat functionality, ' + 'other prefixes may cause issues.', this.settings.prefix, _.debounce((val => {
            if (val === this.settings.prefix) return;
            const previousPrefix = this.settings.prefix;
            this.settings.prefix = val;
            BdApi.Data.save(this.plugin.meta.name, SETTINGS_KEY, this.settings);
            const previousEmoteNames = Object.assign({}, emoteService.emoteNames);
            const emoteNames = {};
            Object.entries(previousEmoteNames).forEach((([name, value]) => {
                const prefixedName = emoteService.getPrefixedName(name.replace(previousPrefix, ''));
                emoteNames[prefixedName] = value;
            }));
            emoteService.emoteNames = emoteNames;
        }), 2000)));
        settings.push(new Settings.RadioGroup('Resize Method', 'How emotes will be scaled down to fit your selected emote size', this.settings.resizeMethod, [ {
            name: 'Scale down smallest side',
            value: 'smallest'
        }, {
            name: 'Scale down largest side',
            value: 'largest'
        } ], (val => {
            this.settings.resizeMethod = val;
        })));
    }
    createCustomEmoteContainer(emoteName, emoteService) {
        const Settings = this.zeresPluginLibrary.Settings;
        const customEmoteContainer = document.createElement('div');
        customEmoteContainer.style.display = 'flex';
        const url = this.settings.customEmotes[emoteName] ?? '';
        const containerImage = document.createElement('img');
        containerImage.alt = emoteName;
        containerImage.title = emoteName;
        containerImage.style.minWidth = `${Math.round(this.settings.autocompleteEmoteSize)}px`;
        containerImage.style.minHeight = `${Math.round(this.settings.autocompleteEmoteSize)}px`;
        containerImage.style.width = `${Math.round(this.settings.autocompleteEmoteSize)}px`;
        containerImage.style.height = `${Math.round(this.settings.autocompleteEmoteSize)}px`;
        containerImage.style.marginRight = '0.5rem';
        customEmoteContainer.append(containerImage);
        PromiseUtils.loadImagePromise(url, false, containerImage).catch((error => Logger.error(error)));
        const deleteButton = document.createElement('button');
        deleteButton.type = 'button';
        deleteButton.classList.add('bd-button', 'bd-button-danger');
        deleteButton.innerHTML = '<svg class="" fill="#FFFFFF" viewBox="0 0 24 24" ' + 'style="width: 20px; height: 20px;"><path fill="none" d="M0 0h24v24H0V0z"></path>' + '<path d="M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zm2.46-7.12l1.41-1.41L12 12.59l2.12-2.' + '12 1.41 1.41L13.41 14l2.12 2.12-1.41 1.41L12 15.41l-2.12 2.12-1.41-1.41L10.59 14l-2.13-2.1' + '2zM15.5 4l-1-1h-5l-1 1H5v2h14V4z"></path><path fill="none" d="M0 0h24v24H0z"></path></svg>';
        customEmoteContainer.append(deleteButton);
        const deleteListener = {
            element: deleteButton,
            name: 'click',
            callback: () => {
                delete this.settings.customEmotes[emoteName];
                if (emoteService.emoteNames) {
                    delete emoteService.emoteNames[emoteService.getPrefixedName(emoteName)];
                }
                BdApi.Data.save(this.plugin.meta.name, SETTINGS_KEY, this.settings);
                BdApi.UI.showToast(`Emote ${emoteName} has been deleted!`, {
                    type: 'success'
                });
                document.getElementById(emoteName)?.remove();
            }
        };
        deleteButton.addEventListener(deleteListener.name, deleteListener.callback);
        this.listenersService.addListener(`${SettingsService.DELETE_BUTTON_CLICK_LISTENER}${emoteName}`, deleteListener);
        const targetEmote = this.settings.customEmotes[emoteName];
        const existingEmote = new Settings.SettingField(emoteName, targetEmote, undefined, customEmoteContainer, {
            noteOnTop: true
        });
        existingEmote.getElement().id = emoteName;
        return existingEmote.getElement();
    }
    stop() {}
}

class ListenersService extends BaseService {
    listeners={};
    addListenersWatchers={};
    start() {
        return Promise.resolve();
    }
    addListener(id, listener) {
        if (this.listeners[id]) this.removeListener(id);
        this.listeners[id] = listener;
    }
    removeListeners(idPrefix) {
        const listeners = Object.keys(this.listeners).filter((id => id.startsWith(idPrefix)));
        if (listeners.length === 0) return;
        listeners.forEach((id => {
            this.removeListener(id);
        }));
    }
    removeListener(id) {
        const listener = this.listeners[id];
        if (!listener) return;
        const {element, name, callback} = listener;
        if (element) {
            element.removeEventListener(name, callback);
        }
        delete this.listeners[id];
    }
    requestAddListeners(targetId) {
        Object.entries(this.addListenersWatchers).forEach((([id, addListenersWatcher]) => {
            if (id !== targetId) return;
            addListenersWatcher.onAddListeners();
        }));
    }
    stop() {
        Object.keys(this.listeners).forEach((id => {
            this.removeListener(id);
        }));
    }
}

function funcToSource(fn, sourcemapArg) {
    var sourcemap = sourcemapArg === undefined ? null : sourcemapArg;
    var source = fn.toString();
    var lines = source.split('\n');
    lines.pop();
    lines.shift();
    var blankPrefixLength = lines[0].search(/\S/);
    var regex = /(['"])__worker_loader_strict__(['"])/g;
    for (var i = 0, n = lines.length; i < n; ++i) {
        lines[i] = lines[i].substring(blankPrefixLength).replace(regex, '$1use strict$2') + '\n';
    }
    if (sourcemap) {
        lines.push('//# sourceMappingURL=' + sourcemap + '\n');
    }
    return lines;
}

function createURL(fn, sourcemapArg) {
    var lines = funcToSource(fn, sourcemapArg);
    var blob = new Blob(lines, {
        type: 'application/javascript'
    });
    return URL.createObjectURL(blob);
}

function createInlineWorkerFactory(fn, sourcemapArg) {
    var url;
    return function WorkerFactory(options) {
        url = url || createURL(fn, sourcemapArg);
        return new Worker(url, options);
    };
}

var WorkerFactory = createInlineWorkerFactory((function() {
    (function() {
        '__worker_loader_strict__';
        var WorkerMessageType;
        (function(WorkerMessageType) {
            WorkerMessageType[WorkerMessageType["INIT"] = 0] = "INIT";
            WorkerMessageType[WorkerMessageType["APPLY_COMMANDS"] = 1] = "APPLY_COMMANDS";
        })(WorkerMessageType || (WorkerMessageType = {}));
        let wasm$1;
        const heap = new Array(128).fill(undefined);
        heap.push(undefined, null, true, false);
        function getObject(idx) {
            return heap[idx];
        }
        let heap_next = heap.length;
        function dropObject(idx) {
            if (idx < 132) return;
            heap[idx] = heap_next;
            heap_next = idx;
        }
        function takeObject(idx) {
            const ret = getObject(idx);
            dropObject(idx);
            return ret;
        }
        let WASM_VECTOR_LEN = 0;
        let cachedUint8Memory0 = null;
        function getUint8Memory0() {
            if (cachedUint8Memory0 === null || cachedUint8Memory0.byteLength === 0) {
                cachedUint8Memory0 = new Uint8Array(wasm$1.memory.buffer);
            }
            return cachedUint8Memory0;
        }
        const cachedTextEncoder = new TextEncoder('utf-8');
        const encodeString = typeof cachedTextEncoder.encodeInto === 'function' ? function(arg, view) {
            return cachedTextEncoder.encodeInto(arg, view);
        } : function(arg, view) {
            const buf = cachedTextEncoder.encode(arg);
            view.set(buf);
            return {
                read: arg.length,
                written: buf.length
            };
        };
        function passStringToWasm0(arg, malloc, realloc) {
            if (realloc === undefined) {
                const buf = cachedTextEncoder.encode(arg);
                const ptr = malloc(buf.length);
                getUint8Memory0().subarray(ptr, ptr + buf.length).set(buf);
                WASM_VECTOR_LEN = buf.length;
                return ptr;
            }
            let len = arg.length;
            let ptr = malloc(len);
            const mem = getUint8Memory0();
            let offset = 0;
            for (;offset < len; offset++) {
                const code = arg.charCodeAt(offset);
                if (code > 0x7F) break;
                mem[ptr + offset] = code;
            }
            if (offset !== len) {
                if (offset !== 0) {
                    arg = arg.slice(offset);
                }
                ptr = realloc(ptr, len, len = offset + arg.length * 3);
                const view = getUint8Memory0().subarray(ptr + offset, ptr + len);
                const ret = encodeString(arg, view);
                offset += ret.written;
            }
            WASM_VECTOR_LEN = offset;
            return ptr;
        }
        function isLikeNone(x) {
            return x === undefined || x === null;
        }
        let cachedInt32Memory0 = null;
        function getInt32Memory0() {
            if (cachedInt32Memory0 === null || cachedInt32Memory0.byteLength === 0) {
                cachedInt32Memory0 = new Int32Array(wasm$1.memory.buffer);
            }
            return cachedInt32Memory0;
        }
        let cachedFloat64Memory0 = null;
        function getFloat64Memory0() {
            if (cachedFloat64Memory0 === null || cachedFloat64Memory0.byteLength === 0) {
                cachedFloat64Memory0 = new Float64Array(wasm$1.memory.buffer);
            }
            return cachedFloat64Memory0;
        }
        const cachedTextDecoder = new TextDecoder('utf-8', {
            ignoreBOM: true,
            fatal: true
        });
        cachedTextDecoder.decode();
        function getStringFromWasm0(ptr, len) {
            return cachedTextDecoder.decode(getUint8Memory0().subarray(ptr, ptr + len));
        }
        function addHeapObject(obj) {
            if (heap_next === heap.length) heap.push(heap.length + 1);
            const idx = heap_next;
            heap_next = heap[idx];
            heap[idx] = obj;
            return idx;
        }
        function debugString(val) {
            const type = typeof val;
            if (type == 'number' || type == 'boolean' || val == null) {
                return `${val}`;
            }
            if (type == 'string') {
                return `"${val}"`;
            }
            if (type == 'symbol') {
                const description = val.description;
                if (description == null) {
                    return 'Symbol';
                } else {
                    return `Symbol(${description})`;
                }
            }
            if (type == 'function') {
                const name = val.name;
                if (typeof name == 'string' && name.length > 0) {
                    return `Function(${name})`;
                } else {
                    return 'Function';
                }
            }
            if (Array.isArray(val)) {
                const length = val.length;
                let debug = '[';
                if (length > 0) {
                    debug += debugString(val[0]);
                }
                for (let i = 1; i < length; i++) {
                    debug += ', ' + debugString(val[i]);
                }
                debug += ']';
                return debug;
            }
            const builtInMatches = /\[object ([^\]]+)\]/.exec(toString.call(val));
            let className;
            if (builtInMatches.length > 1) {
                className = builtInMatches[1];
            } else {
                return toString.call(val);
            }
            if (className == 'Object') {
                try {
                    return 'Object(' + JSON.stringify(val) + ')';
                } catch (_) {
                    return 'Object';
                }
            }
            if (val instanceof Error) {
                return `${val.name}: ${val.message}\n${val.stack}`;
            }
            return className;
        }
        function initPanicHook() {
            wasm$1.initPanicHook();
        }
        function passArray8ToWasm0(arg, malloc) {
            const ptr = malloc(arg.length * 1);
            getUint8Memory0().set(arg, ptr / 1);
            WASM_VECTOR_LEN = arg.length;
            return ptr;
        }
        function getArrayU8FromWasm0(ptr, len) {
            return getUint8Memory0().subarray(ptr / 1, ptr / 1 + len);
        }
        function applyCommands(data, extension, commands) {
            try {
                const retptr = wasm$1.__wbindgen_add_to_stack_pointer(-16);
                const ptr0 = passArray8ToWasm0(data, wasm$1.__wbindgen_malloc);
                const len0 = WASM_VECTOR_LEN;
                const ptr1 = passStringToWasm0(extension, wasm$1.__wbindgen_malloc, wasm$1.__wbindgen_realloc);
                const len1 = WASM_VECTOR_LEN;
                wasm$1.applyCommands(retptr, ptr0, len0, ptr1, len1, addHeapObject(commands));
                var r0 = getInt32Memory0()[retptr / 4 + 0];
                var r1 = getInt32Memory0()[retptr / 4 + 1];
                var r2 = getInt32Memory0()[retptr / 4 + 2];
                var r3 = getInt32Memory0()[retptr / 4 + 3];
                if (r3) {
                    throw takeObject(r2);
                }
                var v2 = getArrayU8FromWasm0(r0, r1).slice();
                wasm$1.__wbindgen_free(r0, r1 * 1);
                return v2;
            } finally {
                wasm$1.__wbindgen_add_to_stack_pointer(16);
            }
        }
        function handleError(f, args) {
            try {
                return f.apply(this, args);
            } catch (e) {
                wasm$1.__wbindgen_exn_store(addHeapObject(e));
            }
        }
        function notDefined(what) {
            return () => {
                throw new Error(`${what} is not defined`);
            };
        }
        async function load(module, imports) {
            if (typeof Response === 'function' && module instanceof Response) {
                if (typeof WebAssembly.instantiateStreaming === 'function') {
                    try {
                        return await WebAssembly.instantiateStreaming(module, imports);
                    } catch (e) {
                        if (module.headers.get('Content-Type') != 'application/wasm') {
                            console.warn("`WebAssembly.instantiateStreaming` failed because your server does not serve wasm with `application/wasm` MIME type. Falling back to `WebAssembly.instantiate` which is slower. Original error:\n", e);
                        } else {
                            throw e;
                        }
                    }
                }
                const bytes = await module.arrayBuffer();
                return await WebAssembly.instantiate(bytes, imports);
            } else {
                const instance = await WebAssembly.instantiate(module, imports);
                if (instance instanceof WebAssembly.Instance) {
                    return {
                        instance,
                        module
                    };
                } else {
                    return instance;
                }
            }
        }
        function getImports() {
            const imports = {};
            imports.wbg = {};
            imports.wbg.__wbindgen_object_drop_ref = function(arg0) {
                takeObject(arg0);
            };
            imports.wbg.__wbindgen_string_get = function(arg0, arg1) {
                const obj = getObject(arg1);
                const ret = typeof obj === 'string' ? obj : undefined;
                var ptr0 = isLikeNone(ret) ? 0 : passStringToWasm0(ret, wasm$1.__wbindgen_malloc, wasm$1.__wbindgen_realloc);
                var len0 = WASM_VECTOR_LEN;
                getInt32Memory0()[arg0 / 4 + 1] = len0;
                getInt32Memory0()[arg0 / 4 + 0] = ptr0;
            };
            imports.wbg.__wbindgen_number_get = function(arg0, arg1) {
                const obj = getObject(arg1);
                const ret = typeof obj === 'number' ? obj : undefined;
                getFloat64Memory0()[arg0 / 8 + 1] = isLikeNone(ret) ? 0 : ret;
                getInt32Memory0()[arg0 / 4 + 0] = !isLikeNone(ret);
            };
            imports.wbg.__wbindgen_string_new = function(arg0, arg1) {
                const ret = getStringFromWasm0(arg0, arg1);
                return addHeapObject(ret);
            };
            imports.wbg.__wbg_log_e8367a5df6be19a7 = function(arg0, arg1) {
                console.log(getStringFromWasm0(arg0, arg1));
            };
            imports.wbg.__wbindgen_error_new = function(arg0, arg1) {
                const ret = new Error(getStringFromWasm0(arg0, arg1));
                return addHeapObject(ret);
            };
            imports.wbg.__wbindgen_is_object = function(arg0) {
                const val = getObject(arg0);
                const ret = typeof val === 'object' && val !== null;
                return ret;
            };
            imports.wbg.__wbindgen_jsval_loose_eq = function(arg0, arg1) {
                const ret = getObject(arg0) == getObject(arg1);
                return ret;
            };
            imports.wbg.__wbindgen_boolean_get = function(arg0) {
                const v = getObject(arg0);
                const ret = typeof v === 'boolean' ? v ? 1 : 0 : 2;
                return ret;
            };
            imports.wbg.__wbg_String_88810dfeb4021902 = function(arg0, arg1) {
                const ret = String(getObject(arg1));
                const ptr0 = passStringToWasm0(ret, wasm$1.__wbindgen_malloc, wasm$1.__wbindgen_realloc);
                const len0 = WASM_VECTOR_LEN;
                getInt32Memory0()[arg0 / 4 + 1] = len0;
                getInt32Memory0()[arg0 / 4 + 0] = ptr0;
            };
            imports.wbg.__wbg_get_27fe3dac1c4d0224 = function(arg0, arg1) {
                const ret = getObject(arg0)[arg1 >>> 0];
                return addHeapObject(ret);
            };
            imports.wbg.__wbg_length_e498fbc24f9c1d4f = function(arg0) {
                const ret = getObject(arg0).length;
                return ret;
            };
            imports.wbg.__wbindgen_is_function = function(arg0) {
                const ret = typeof getObject(arg0) === 'function';
                return ret;
            };
            imports.wbg.__wbg_next_b7d530c04fd8b217 = function(arg0) {
                const ret = getObject(arg0).next;
                return addHeapObject(ret);
            };
            imports.wbg.__wbg_next_88560ec06a094dea = function() {
                return handleError((function(arg0) {
                    const ret = getObject(arg0).next();
                    return addHeapObject(ret);
                }), arguments);
            };
            imports.wbg.__wbg_done_1ebec03bbd919843 = function(arg0) {
                const ret = getObject(arg0).done;
                return ret;
            };
            imports.wbg.__wbg_value_6ac8da5cc5b3efda = function(arg0) {
                const ret = getObject(arg0).value;
                return addHeapObject(ret);
            };
            imports.wbg.__wbg_iterator_55f114446221aa5a = function() {
                const ret = Symbol.iterator;
                return addHeapObject(ret);
            };
            imports.wbg.__wbg_get_baf4855f9a986186 = function() {
                return handleError((function(arg0, arg1) {
                    const ret = Reflect.get(getObject(arg0), getObject(arg1));
                    return addHeapObject(ret);
                }), arguments);
            };
            imports.wbg.__wbg_call_95d1ea488d03e4e8 = function() {
                return handleError((function(arg0, arg1) {
                    const ret = getObject(arg0).call(getObject(arg1));
                    return addHeapObject(ret);
                }), arguments);
            };
            imports.wbg.__wbg_isArray_39d28997bf6b96b4 = function(arg0) {
                const ret = Array.isArray(getObject(arg0));
                return ret;
            };
            imports.wbg.__wbg_instanceof_ArrayBuffer_a69f02ee4c4f5065 = function(arg0) {
                let result;
                try {
                    result = getObject(arg0) instanceof ArrayBuffer;
                } catch {
                    result = false;
                }
                const ret = result;
                return ret;
            };
            imports.wbg.__wbg_entries_4e1315b774245952 = function(arg0) {
                const ret = Object.entries(getObject(arg0));
                return addHeapObject(ret);
            };
            imports.wbg.__wbg_buffer_cf65c07de34b9a08 = function(arg0) {
                const ret = getObject(arg0).buffer;
                return addHeapObject(ret);
            };
            imports.wbg.__wbg_new_537b7341ce90bb31 = function(arg0) {
                const ret = new Uint8Array(getObject(arg0));
                return addHeapObject(ret);
            };
            imports.wbg.__wbg_set_17499e8aa4003ebd = function(arg0, arg1, arg2) {
                getObject(arg0).set(getObject(arg1), arg2 >>> 0);
            };
            imports.wbg.__wbg_length_27a2afe8ab42b09f = function(arg0) {
                const ret = getObject(arg0).length;
                return ret;
            };
            imports.wbg.__wbg_instanceof_Uint8Array_01cebe79ca606cca = function(arg0) {
                let result;
                try {
                    result = getObject(arg0) instanceof Uint8Array;
                } catch {
                    result = false;
                }
                const ret = result;
                return ret;
            };
            imports.wbg.__wbg_random_afb3265527cf67c8 = typeof Math.random == 'function' ? Math.random : notDefined('Math.random');
            imports.wbg.__wbg_new_abda76e883ba8a5f = function() {
                const ret = new Error;
                return addHeapObject(ret);
            };
            imports.wbg.__wbg_stack_658279fe44541cf6 = function(arg0, arg1) {
                const ret = getObject(arg1).stack;
                const ptr0 = passStringToWasm0(ret, wasm$1.__wbindgen_malloc, wasm$1.__wbindgen_realloc);
                const len0 = WASM_VECTOR_LEN;
                getInt32Memory0()[arg0 / 4 + 1] = len0;
                getInt32Memory0()[arg0 / 4 + 0] = ptr0;
            };
            imports.wbg.__wbg_error_f851667af71bcfc6 = function(arg0, arg1) {
                try {
                    console.error(getStringFromWasm0(arg0, arg1));
                } finally {
                    wasm$1.__wbindgen_free(arg0, arg1);
                }
            };
            imports.wbg.__wbindgen_debug_string = function(arg0, arg1) {
                const ret = debugString(getObject(arg1));
                const ptr0 = passStringToWasm0(ret, wasm$1.__wbindgen_malloc, wasm$1.__wbindgen_realloc);
                const len0 = WASM_VECTOR_LEN;
                getInt32Memory0()[arg0 / 4 + 1] = len0;
                getInt32Memory0()[arg0 / 4 + 0] = ptr0;
            };
            imports.wbg.__wbindgen_throw = function(arg0, arg1) {
                throw new Error(getStringFromWasm0(arg0, arg1));
            };
            imports.wbg.__wbindgen_memory = function() {
                const ret = wasm$1.memory;
                return addHeapObject(ret);
            };
            return imports;
        }
        function finalizeInit(instance, module) {
            wasm$1 = instance.exports;
            init.__wbindgen_wasm_module = module;
            cachedFloat64Memory0 = null;
            cachedInt32Memory0 = null;
            cachedUint8Memory0 = null;
            return wasm$1;
        }
        async function init(input) {
            if (typeof input === 'undefined') {
                input = new URL('gif_wasm_bg.wasm', document.currentScript && document.currentScript.src || new URL('worker.js', document.baseURI).href);
            }
            const imports = getImports();
            if (typeof input === 'string' || typeof Request === 'function' && input instanceof Request || typeof URL === 'function' && input instanceof URL) {
                input = fetch(input);
            }
            const {instance, module} = await load(await input, imports);
            return finalizeInit(instance, module);
        }
        function _loadWasmModule(sync, filepath, src, imports) {
            function _instantiateOrCompile(source, imports, stream) {
                var instantiateFunc = stream ? WebAssembly.instantiateStreaming : WebAssembly.instantiate;
                var compileFunc = stream ? WebAssembly.compileStreaming : WebAssembly.compile;
                if (imports) {
                    return instantiateFunc(source, imports);
                } else {
                    return compileFunc(source);
                }
            }
            var buf = null;
            var isNode = typeof process !== 'undefined' && process.versions != null && process.versions.node != null;
            if (isNode) {
                buf = Buffer.from(src, 'base64');
            } else {
                var raw = globalThis.atob(src);
                var rawLength = raw.length;
                buf = new Uint8Array(new ArrayBuffer(rawLength));
                for (var i = 0; i < rawLength; i++) {
                    buf[i] = raw.charCodeAt(i);
                }
            }
            if (sync) {
                var mod = new WebAssembly.Module(buf);
                return imports ? new WebAssembly.Instance(mod, imports) : mod;
            } else {
                return _instantiateOrCompile(buf, imports, false);
            }
        }
        function wasm(imports) {
            return _loadWasmModule(0, null, '', imports);
        }
        onmessage = message => {
            const request = message.data;
            let response;
            let promise;
            switch (request.type) {
              case WorkerMessageType.INIT:
                promise = initWasm();
                break;

              case WorkerMessageType.APPLY_COMMANDS:
                promise = doApplyCommands(request.data);
                break;

              default:
                promise = Promise.reject(new Error('Unknown request type'));
                break;
            }
            promise.then((data => {
                response = {
                    type: request.type,
                    data
                };
                postMessage(response);
            })).catch((error => {
                response = {
                    type: request.type,
                    data: error
                };
                postMessage(response);
            }));
        };
        async function initWasm() {
            const instance = await wasm();
            await init(instance);
            initPanicHook();
        }
        function doApplyCommands(data) {
            const {buffer, extension, commands} = data;
            commands.forEach((command => {
                const value = (command.param ?? 0).toString();
                command.param = parseFloat(value);
            }));
            const result = applyCommands(buffer, extension, commands);
            return Promise.resolve(result);
        }
    })();
}), null);

var WorkerMessageType;

(function(WorkerMessageType) {
    WorkerMessageType[WorkerMessageType["INIT"] = 0] = "INIT";
    WorkerMessageType[WorkerMessageType["APPLY_COMMANDS"] = 1] = "APPLY_COMMANDS";
})(WorkerMessageType || (WorkerMessageType = {}));

class GifWorker {
    worker;
    onterminate;
    onerror;
    onmessage;
    constructor(worker) {
        this.worker = worker;
        worker.onerror = error => {
            this.onerror?.(error);
        };
        worker.onmessage = message => {
            this.onmessage?.(message);
        };
    }
    postMessage(message) {
        this.worker.postMessage(message);
    }
    terminate() {
        this.onterminate?.();
        this.worker.terminate();
    }
}

class GifProcessingService extends BaseService {
    isProcessing=false;
    worker;
    async start() {
        await this.getWorker();
    }
    async getWorker() {
        if (this.worker) return this.worker;
        const worker = new GifWorker(new WorkerFactory);
        const request = {
            type: WorkerMessageType.INIT
        };
        await PromiseUtils.workerMessagePromise(worker, request);
        this.worker = worker;
        return worker;
    }
    stopWorker() {
        this.isProcessing = false;
        if (!this.worker) return;
        this.worker.terminate();
        this.worker = undefined;
    }
    modifyGif(url, options) {
        if (this.isProcessing) {
            return {
                result: Promise.reject(new Error('Already processing, please wait.'))
            };
        }
        this.isProcessing = true;
        return {
            cancel: () => {
                this.stopWorker();
            },
            result: this.modifyGifImpl(url, options).finally((() => {
                this.isProcessing = false;
            }))
        };
    }
    async modifyGifImpl(url, options) {
        Logger.info('Got GIF request', url, options);
        const commands = this.getCommands(options);
        Logger.info('Processed request commands', commands);
        const buffer = await this.processCommands(url, commands);
        Logger.info('Processed modified emote', {
            length: buffer.length
        });
        return buffer;
    }
    getCommands(options) {
        const commands = [];
        options.forEach((option => {
            switch (option[0]) {
              case 'resize':
                {
                    const command = {
                        name: option[0],
                        param: option[1]
                    };
                    commands.push(command);
                    break;
                }

              case 'reverse':
                {
                    commands.push({
                        name: option[0]
                    });
                    break;
                }

              case 'flip':
                commands.push({
                    name: option[0],
                    param: 0
                });
                break;

              case 'flap':
                commands.push({
                    name: 'flip',
                    param: 1
                });
                break;

              case 'speed':
                {
                    const param = option[1]?.toString() ?? '';
                    commands.push({
                        name: option[0],
                        param: Math.max(2, parseFloat(param))
                    });
                    break;
                }

              case 'hyperspeed':
                commands.push({
                    name: 'hyperspeed'
                });
                break;

              case 'rotate':
                commands.push({
                    name: option[0],
                    param: option[1]
                });
                break;

              case 'wiggle':
                {
                    let size = 2;
                    const param = option[1];
                    if (param === 'big') size = 4; else if (param === 'bigger') size = 6; else if (param === 'huge') size = 10;
                    commands.push({
                        name: option[0],
                        param: size
                    });
                    break;
                }

              case 'rain':
                commands.push({
                    name: option[0],
                    param: option[1] === 'glitter' ? 1 : 0
                });
                break;

              case 'spin':
              case 'spinrev':
              case 'shake':
              case 'rainbow':
              case 'infinite':
              case 'slide':
              case 'sliderev':
                {
                    let speed = 8;
                    const param = option[1];
                    if (param === 'fast') speed = 6; else if (param === 'faster') speed = 4; else if (param === 'hyper') speed = 2;
                    commands.push({
                        name: option[0],
                        param: speed
                    });
                    break;
                }
            }
        }));
        return commands;
    }
    async processCommands(url, commands) {
        let buffer$1 = await PromiseUtils.urlGetBuffer(url);
        const extension = url.substring(url.lastIndexOf('.')).replace('.', '');
        const worker = await this.getWorker();
        const request = {
            type: WorkerMessageType.APPLY_COMMANDS,
            data: {
                buffer: buffer$1,
                extension,
                commands
            }
        };
        const response = await PromiseUtils.workerMessagePromise(worker, request);
        buffer$1 = buffer.Buffer.from(response);
        if (!(buffer$1 instanceof buffer.Buffer)) throw Error('Did not process gif!');
        return buffer$1;
    }
    stop() {
        this.stopWorker();
    }
}

class ModulesService extends BaseService {
    channelStore;
    uploader;
    draft;
    permissions;
    discordPermissions;
    dispatcher;
    componentDispatcher;
    pendingReplyDispatcher={};
    emojiStore;
    emojiSearch;
    emojiDisabledReasons;
    userStore;
    messageStore;
    classes;
    cloudUploader;
    start() {
        this.channelStore = BdApi.Webpack.getModule(BdApi.Webpack.Filters.byProps('getChannel', 'hasChannel'));
        this.uploader = BdApi.Webpack.getModule(BdApi.Webpack.Filters.byProps('instantBatchUpload'));
        this.draft = BdApi.Webpack.getModule(BdApi.Webpack.Filters.byProps('changeDraft'));
        this.permissions = BdApi.Webpack.getModule(BdApi.Webpack.Filters.byProps('getChannelPermissions'));
        this.discordPermissions = BdApi.Webpack.getModule((module => typeof module.CREATE_INSTANT_INVITE === 'bigint'), {
            searchExports: true
        });
        this.dispatcher = BdApi.Webpack.getModule(BdApi.Webpack.Filters.byProps('dispatch', 'subscribe'));
        this.componentDispatcher = BdApi.Webpack.getModule((module => {
            if (module.dispatchToLastSubscribed !== undefined) {
                const componentDispatcher = module;
                return componentDispatcher.emitter.listeners('SHAKE_APP').length > 0;
            }
            return false;
        }), {
            searchExports: true
        });
        this.pendingReplyDispatcher.module = BdApi.Webpack.getModule((module => {
            Object.entries(module).forEach((([key, value]) => {
                if (!(typeof value === 'function')) return;
                const valueString = value.toString();
                if (valueString.includes('DELETE_PENDING_REPLY')) {
                    this.pendingReplyDispatcher.deletePendingReplyKey = key;
                } else if (valueString.includes('CREATE_PENDING_REPLY')) {
                    this.pendingReplyDispatcher.createPendingReplyKey = key;
                } else if (valueString.includes('SET_PENDING_REPLY_SHOULD_MENTION')) {
                    this.pendingReplyDispatcher.setPendingReplyShouldMentionKey = key;
                }
            }));
            return this.pendingReplyDispatcher.deletePendingReplyKey !== undefined;
        }));
        this.emojiStore = BdApi.Webpack.getModule(BdApi.Webpack.Filters.byProps('getEmojiUnavailableReason'));
        this.emojiSearch = BdApi.Webpack.getModule(BdApi.Webpack.Filters.byProps('getDisambiguatedEmojiContext'));
        this.emojiDisabledReasons = BdApi.Webpack.getModule(BdApi.Webpack.Filters.byProps('PREMIUM_LOCKED'), {
            searchExports: true
        });
        this.userStore = BdApi.Webpack.getModule(BdApi.Webpack.Filters.byProps('getCurrentUser'));
        this.messageStore = BdApi.Webpack.getModule(BdApi.Webpack.Filters.byProps('sendMessage'));
        this.cloudUploader = BdApi.Webpack.getModule((module => Object.values(module).some((value => {
            if (typeof value !== 'object' || value === null) return false;
            const curValue = value;
            return curValue.NOT_STARTED !== undefined && curValue.UPLOADING !== undefined && module.n !== undefined;
        }))));
        const TextArea = BdApi.Webpack.getModule(BdApi.Webpack.Filters.byProps('channelTextArea', 'textAreaHeight'));
        const Editor = BdApi.Webpack.getModule(BdApi.Webpack.Filters.byProps('editor', 'placeholder'));
        const Autocomplete = BdApi.Webpack.getModule(BdApi.Webpack.Filters.byProps('autocomplete', 'autocompleteInner', 'autocompleteRowVertical'));
        const autocompleteAttached = BdApi.Webpack.getModule(BdApi.Webpack.Filters.byProps('autocomplete', 'autocompleteAttached'));
        const Wrapper = BdApi.Webpack.getModule(BdApi.Webpack.Filters.byProps('wrapper', 'base'));
        const Size = BdApi.Webpack.getModule(BdApi.Webpack.Filters.byProps('size12'));
        this.classes = {
            TextArea,
            Editor,
            Autocomplete: {
                ...Autocomplete,
                autocomplete: [ autocompleteAttached?.autocomplete, autocompleteAttached?.autocompleteAttached, Autocomplete?.autocomplete ].join(' ')
            },
            Wrapper,
            Size
        };
        return Promise.resolve();
    }
    stop() {}
}

class SendMessageService extends BaseService {
    emoteService;
    attachService;
    modulesService;
    settingsService;
    gifProcessingService;
    start(emoteService, attachService, modulesService, settingsService, gifProcessingService) {
        this.emoteService = emoteService;
        this.attachService = attachService;
        this.modulesService = modulesService;
        this.settingsService = settingsService;
        this.gifProcessingService = gifProcessingService;
        BdApi.Patcher.instead(this.plugin.meta.name, modulesService.messageStore, 'sendMessage', ((_, args, original) => this.onSendMessage(args, original)));
        return Promise.resolve();
    }
    async onSendMessage(args, original) {
        const callDefault = original;
        const channelId = args[0];
        const message = args[1];
        if (channelId === undefined || !message) {
            callDefault(...args);
            return;
        }
        try {
            const discordEmotes = this.getTargetEmoteFromMessage(message);
            let content = message.content;
            const foundEmote = this.getTextPos(content, {
                ...this.emoteService.emoteNames,
                ...discordEmotes
            });
            if (!foundEmote) {
                callDefault(...args);
                return;
            }
            if (!this.attachService.canAttach) {
                BdApi.UI.showToast('This channel does not allow sending images!', {
                    type: 'error'
                });
                callDefault(...args);
                return;
            }
            content = (content.substring(0, foundEmote.pos) + content.substring(foundEmote.pos + foundEmote.nameAndCommand.length)).trim();
            foundEmote.content = content;
            foundEmote.channel = channelId;
            try {
                this.attachService.pendingUpload = this.fetchBlobAndUpload(foundEmote);
                await this.attachService.pendingUpload;
                return;
            } catch (error) {
                const errorMessage = error instanceof Error ? error.message : error;
                BdApi.UI.showToast(errorMessage, {
                    type: 'error'
                });
                if (content === '') return;
                message.content = content;
            } finally {
                this.attachService.pendingUpload = undefined;
            }
            callDefault(...args);
            return;
        } catch (error) {
            Logger.warn('Error in onSendMessage', error);
        }
    }
    getTargetEmoteFromMessage(message) {
        const invalidEmojis = message.invalidEmojis ?? [];
        const validNonShortcutEmojis = message.validNonShortcutEmojis ?? [];
        let emoji;
        let validEmoji = false;
        if (invalidEmojis.length > 0) {
            const count = invalidEmojis.length;
            emoji = invalidEmojis[count - 1];
        } else if (validNonShortcutEmojis?.length > 0) {
            const count = validNonShortcutEmojis.length;
            emoji = validNonShortcutEmojis[count - 1];
            if (emoji?.managed === true) return {};
            validEmoji = emoji?.available === true && !this.attachService.externalEmotes.has(emoji.id);
        } else return {};
        if (!emoji) return {};
        const emojiName = emoji.originalName ?? emoji.name;
        const allNamesString = emoji.allNamesString.replace(emoji.name, emojiName);
        const emojiText = `<${emoji.animated ? 'a' : ''}${allNamesString}${emoji.id}>`;
        const result = {};
        const url = emoji.url.split('?')[0] ?? '';
        if (!url) return {};
        const extensionIndex = url.lastIndexOf('.');
        result[emojiText] = {
            name: emojiName,
            url: url.substring(extensionIndex) === '.webp' ? `${url.substring(0, extensionIndex)}.png` : url
        };
        const foundEmote = this.getTextPos(message.content, result);
        if (!foundEmote) return {};
        if (validEmoji && foundEmote.commands.length === 0) return {};
        return result;
    }
    getTextPos(content, emoteCandidates) {
        const foundEmotes = [];
        Object.entries(emoteCandidates).forEach((([key, value]) => {
            const regex = new RegExp('(?<!\\/)' + key + '(?<=\\b|>)', 'g');
            const regexCommand = new RegExp(key + '(\\.\\S{4,}\\b)+');
            const matches = content.match(regex);
            const command = content.match(regexCommand);
            if (!matches || matches.length === 0) return;
            for (let i = 0; i < matches.length; i++) {
                const pos = this.getNthIndexOf(content, key, i);
                const emote = {
                    name: typeof value === 'string' ? key : value.name,
                    nameAndCommand: key,
                    url: typeof value === 'string' ? value : value.url,
                    emoteLength: key.length,
                    pos,
                    spoiler: false,
                    commands: []
                };
                if (command) {
                    const commands = command[0]?.split('.') ?? [];
                    emote.commands = commands.filter((command => command !== key)).map((command => {
                        const split = command.split('-');
                        return [ split[0] ?? '', split[1] ?? '' ];
                    }));
                    emote.nameAndCommand = command[0] ?? '';
                }
                const beforeEmote = content.substring(0, pos);
                const afterEmote = content.substring(pos + emote.nameAndCommand.length);
                if (beforeEmote.includes('||') && afterEmote.includes('||')) {
                    const spoilerStart = beforeEmote.substring(beforeEmote.indexOf('||'));
                    emote.nameAndCommand = spoilerStart + emote.nameAndCommand;
                    emote.pos -= spoilerStart.length;
                    const spoilerEnd = afterEmote.substring(0, afterEmote.indexOf('||') + 2);
                    emote.nameAndCommand = emote.nameAndCommand + spoilerEnd;
                    emote.spoiler = true;
                }
                if (!beforeEmote.includes('`') || !afterEmote.includes('`')) {
                    foundEmotes.push(emote);
                }
            }
        }));
        return foundEmotes.pop();
    }
    getNthIndexOf(input, search, nth) {
        const firstIndex = input.indexOf(search);
        const startPos = firstIndex + search.length;
        if (nth === 0) {
            return firstIndex;
        } else {
            const inputAfterFirstOccurrence = input.substring(startPos);
            const nextOccurrence = this.getNthIndexOf(inputAfterFirstOccurrence, search, nth - 1);
            if (nextOccurrence === -1) {
                return -1;
            } else {
                return startPos + nextOccurrence;
            }
        }
    }
    async fetchBlobAndUpload(emote) {
        const url = emote.url, name = emote.name, commands = emote.commands;
        if (url.endsWith('.gif') || this.findCommand(commands, this.getGifModifiers())) {
            return this.getMetaAndModifyGif(emote);
        }
        const resultBlob = await this.compress(url, commands) ?? new Blob([]);
        if (resultBlob.size === 0) throw new Error('Emote URL did not contain data');
        this.uploadFile({
            fileData: resultBlob,
            fullName: name + '.png',
            emote
        });
    }
    findCommand(commands, names) {
        let foundCommand;
        commands.forEach((command => {
            names.forEach((name => {
                if (command[0] === name) foundCommand = command;
            }));
        }));
        return foundCommand;
    }
    getGifModifiers() {
        const gifModifiers = [];
        this.emoteService.modifiers.forEach((modifier => {
            if (modifier.type === 'gif') {
                gifModifiers.push(modifier.name);
            }
        }));
        return gifModifiers;
    }
    async getMetaAndModifyGif(emote) {
        const image = await PromiseUtils.loadImagePromise(emote.url);
        const commands = emote.commands;
        this.addResizeCommand(commands, image);
        let closeNotice;
        const timeout = setTimeout((() => {
            closeNotice = BdApi.UI.showNotice(`Processing gif ${emote.name}...`, {
                type: 'info',
                buttons: [ {
                    label: 'Cancel',
                    onClick: () => {
                        cancel?.();
                        cancel = undefined;
                        closeNotice?.();
                        closeNotice = undefined;
                    }
                } ]
            });
        }), 250);
        let {cancel, result} = this.gifProcessingService.modifyGif(emote.url, commands);
        const buffer = await result.finally((() => {
            cancel = undefined;
            clearTimeout(timeout);
            closeNotice?.();
            closeNotice = undefined;
        }));
        if (buffer.length === 0) {
            throw Error('Failed to process gif');
        }
        this.uploadFile({
            fileData: buffer,
            fullName: emote.name + '.gif',
            emote
        });
    }
    addResizeCommand(commands, image) {
        const scaleFactorNum = this.getScaleFactor(commands, image);
        let scaleFactor = scaleFactorNum.toString();
        const wideCommand = this.findCommand(commands, [ 'wide' ]);
        if (wideCommand) {
            const wideness = this.getEmoteWideness(wideCommand);
            scaleFactor = `${scaleFactorNum * wideness}x${scaleFactorNum}}`;
        }
        commands.push([ 'resize', scaleFactor ]);
    }
    getScaleFactor(commands, image) {
        const size = this.getEmoteSize(commands);
        let scaleFactor;
        if (this.settingsService.settings.resizeMethod === 'largest') {
            if (image.width > image.height) {
                scaleFactor = size / image.width;
            } else scaleFactor = size / image.height;
        } else {
            if (image.width < image.height) {
                scaleFactor = size / image.width;
            } else scaleFactor = size / image.height;
        }
        return scaleFactor;
    }
    getEmoteSize(commands) {
        let resizeCommand = [];
        let size;
        commands.forEach(((command, index, object) => {
            if (command[0] === 'resize') {
                resizeCommand = command;
                object.splice(index, 1);
            }
        }));
        const resizeCommandSize = resizeCommand[1] ?? '';
        if (resizeCommandSize !== '') {
            size = resizeCommandSize;
        } else {
            size = Math.round(this.settingsService.settings.emoteSize);
        }
        if (size === 'large' || size === 'big') {
            return 128;
        } else if (size === 'medium' || size === 'normal') {
            return 64;
        } else {
            const sizeNumber = typeof size === 'string' ? parseInt(size) : size;
            if (!isNaN(sizeNumber)) {
                return Math.min(Math.max(sizeNumber, 32), 128);
            }
            return 48;
        }
    }
    getEmoteWideness(wideCommand) {
        const param = wideCommand[1];
        const paramNum = parseInt(param ?? '');
        if (!isNaN(paramNum)) {
            return Math.max(Math.min(paramNum, 8), 2);
        } else if (param === 'extreme') {
            return 8;
        } else if (param === 'huge') {
            return 6;
        } else if (param === 'big') {
            return 4;
        } else {
            return 2;
        }
    }
    uploadFile(params) {
        const {fileData, fullName, emote} = params;
        const content = emote.content ?? '';
        const channelId = emote.channel ?? '';
        if (!channelId) {
            Logger.error('Channel ID not found for emote:', emote);
            return;
        }
        const upload = new this.modulesService.cloudUploader.n({
            file: new File([ fileData ], fullName),
            platform: 1
        }, channelId);
        upload.spoiler = emote.spoiler;
        const uploadOptions = {
            channelId,
            uploads: [ upload ],
            draftType: 0,
            parsedMessage: {
                content,
                invalidEmojis: [],
                tts: false,
                channel_id: channelId
            }
        };
        const pendingReply = this.attachService.pendingReply;
        if (pendingReply) {
            uploadOptions.options = {
                allowedMentions: {
                    replied_user: pendingReply.shouldMention
                },
                messageReference: {
                    channel_id: pendingReply.message.channel_id,
                    guild_id: pendingReply.channel.guild_id,
                    message_id: pendingReply.message.id
                }
            };
        }
        this.modulesService.uploader.uploadFiles(uploadOptions);
    }
    async compress(url, commands) {
        const image = await PromiseUtils.loadImagePromise(url);
        const canvas = await this.applyScaling(image, commands);
        return await new Promise((resolve => {
            canvas.toBlob((blob => {
                resolve(blob ?? undefined);
            }), 'image/png', 1);
        }));
    }
    async applyScaling(image, commands) {
        const scaleFactor = this.getScaleFactor(commands, image);
        let canvas = document.createElement('canvas');
        canvas.width = image.width;
        canvas.height = image.height;
        if (commands.length > 0) {
            canvas = this.applyCommands(image, canvas, commands);
        } else {
            canvas.getContext('2d')?.drawImage(image, 0, 0);
        }
        const scaledBitmap = await createImageBitmap(canvas, {
            resizeWidth: Math.ceil(canvas.width * scaleFactor),
            resizeHeight: Math.ceil(canvas.height * scaleFactor),
            resizeQuality: 'high'
        });
        const resizedCanvas = document.createElement('canvas');
        resizedCanvas.width = scaledBitmap.width;
        resizedCanvas.height = scaledBitmap.height;
        const resizedContext = resizedCanvas.getContext('bitmaprenderer');
        if (!resizedContext) throw new Error('Bitmap context not found');
        resizedContext.transferFromImageBitmap(scaledBitmap);
        return resizedCanvas;
    }
    applyCommands(image, canvas, commands) {
        let scaleH = 1, scaleV = 1, posX = 0, posY = 0;
        if (this.findCommand(commands, [ 'flip' ])) {
            scaleH = -1;
            posX = canvas.width * -1;
        }
        if (this.findCommand(commands, [ 'flap' ])) {
            scaleV = -1;
            posY = canvas.height * -1;
        }
        const ctx = canvas.getContext('2d');
        const wideCommand = this.findCommand(commands, [ 'wide' ]);
        if (wideCommand) {
            const wideness = this.getEmoteWideness(wideCommand);
            image.width = image.width * wideness;
            canvas.width = canvas.width * wideness;
        }
        const rotateCommand = this.findCommand(commands, [ 'rotate' ]);
        if (rotateCommand) {
            const angle = parseInt(rotateCommand[1] ?? '0') * Math.PI / 180, sin = Math.sin(angle), cos = Math.cos(angle);
            const newWidth = Math.abs(canvas.width * cos) + Math.abs(canvas.height * sin);
            const newHeight = Math.abs(canvas.width * sin) + Math.abs(canvas.height * cos);
            canvas.width = newWidth;
            canvas.height = newHeight;
            ctx?.translate(canvas.width / 2, canvas.height / 2);
            ctx?.rotate(angle);
            posX = -image.width / 2;
            posY = -image.height / 2;
        }
        ctx?.scale(scaleH, scaleV);
        ctx?.drawImage(image, posX, posY, image.width, image.height);
        return canvas;
    }
    stop() {}
}

class HtmlService extends BaseService {
    modulesService;
    start(modulesService) {
        this.modulesService = modulesService;
        return Promise.resolve();
    }
    addClasses(element, ...classes) {
        for (const curClass of classes) {
            if (!curClass) continue;
            const split = curClass.split(' ');
            for (const curClassItem of split) {
                element.classList.add(curClassItem);
            }
        }
    }
    getClassSelector(classes) {
        return classes.split(' ').map((curClass => !curClass.startsWith('.') ? `.${curClass}` : curClass)).join(' ');
    }
    getTextAreaField(editor) {
        const textArea = this.modulesService.classes.TextArea.textArea;
        return editor?.closest(this.getClassSelector(textArea)) ?? undefined;
    }
    getTextAreaContainer(editor) {
        const channelTextArea = this.modulesService.classes.TextArea.channelTextArea;
        return editor?.closest(this.getClassSelector(channelTextArea)) ?? undefined;
    }
    getEditors() {
        const editor = this.modulesService.classes.Editor.editor;
        return document.querySelectorAll(this.getClassSelector(editor)) ?? [];
    }
    stop() {}
}

class PatchesService extends BaseService {
    attachService;
    completionsService;
    emoteService;
    modulesService;
    start(attachService, completionsService, emoteService, modulesService) {
        this.attachService = attachService;
        this.completionsService = completionsService;
        this.emoteService = emoteService;
        this.modulesService = modulesService;
        this.changeDraftPatch();
        this.pendingReplyPatch();
        this.emojiSearchPatch();
        this.lockedEmojisPatch();
        return Promise.resolve();
    }
    changeDraftPatch() {
        BdApi.Patcher.before(this.plugin.meta.name, this.modulesService.draft, 'changeDraft', ((_, args) => this.onChangeDraft(args)));
    }
    onChangeDraft(args) {
        const channelId = args[0];
        if (channelId !== undefined) this.attachService.setCanAttach(channelId);
        if (!this.attachService.canAttach) return;
        const draft = args[1];
        if (draft === undefined) return;
        this.completionsService.draft = draft;
        try {
            const lastText = this.completionsService.cached?.draft;
            if (!this.emoteService.shouldCompleteEmote(draft) && !this.emoteService.shouldCompleteCommand(draft)) {
                this.completionsService.destroyCompletions();
                return;
            }
            if (lastText !== draft) {
                this.completionsService.renderCompletions();
            }
        } catch (err) {
            Logger.warn('Error in onChangeDraft', err);
        }
    }
    pendingReplyPatch() {
        const pendingReplyDispatcher = this.modulesService.pendingReplyDispatcher;
        const createPendingReply = pendingReplyDispatcher.createPendingReplyKey;
        if (createPendingReply === undefined) {
            Logger.warn('Create pending reply function name not found');
            return;
        }
        const deletePendingReply = pendingReplyDispatcher.deletePendingReplyKey;
        if (deletePendingReply === undefined) {
            Logger.warn('Delete pending reply function name not found');
            return;
        }
        const setPendingReplyShouldMention = pendingReplyDispatcher.setPendingReplyShouldMentionKey;
        if (setPendingReplyShouldMention === undefined) {
            Logger.warn('Set pending reply should mention function name not found');
            return;
        }
        BdApi.Patcher.before(this.plugin.meta.name, pendingReplyDispatcher.module, createPendingReply, ((_, args) => {
            if (!args[0]) return;
            const reply = args[0];
            this.attachService.pendingReply = reply;
        }));
        BdApi.Patcher.instead(this.plugin.meta.name, pendingReplyDispatcher.module, deletePendingReply, ((_, args, original) => this.onDeletePendingReply(args, original)));
        BdApi.Patcher.before(this.plugin.meta.name, pendingReplyDispatcher.module, setPendingReplyShouldMention, ((_, args) => {
            if (typeof args[0] !== 'string' || typeof args[1] !== 'boolean') return;
            const channelId = args[0];
            const shouldMention = args[1];
            if (this.attachService.pendingReply?.channel.id !== channelId) return;
            this.attachService.pendingReply.shouldMention = shouldMention;
        }));
    }
    async onDeletePendingReply(args, original) {
        const callDefault = original;
        try {
            if (this.attachService.pendingUpload) await this.attachService.pendingUpload;
            callDefault(...args);
        } catch (err) {
            Logger.warn('Error in onDeletePendingReply', err);
        } finally {
            this.attachService.pendingReply = undefined;
        }
    }
    emojiSearchPatch() {
        BdApi.Patcher.after(this.plugin.meta.name, this.modulesService.emojiSearch, 'search', ((_, _2, result) => this.onEmojiSearch(result)));
    }
    onEmojiSearch(result) {
        if (!this.attachService.canAttach) return;
        const searchResult = result;
        searchResult.unlocked.push(...searchResult.locked);
        searchResult.locked = [];
    }
    lockedEmojisPatch() {
        const emojiStore = this.modulesService.emojiStore;
        BdApi.Patcher.after(this.plugin.meta.name, emojiStore, 'getEmojiUnavailableReason', ((_, args, result) => this.onGetEmojiUnavailableReason(args, result)));
        BdApi.Patcher.after(this.plugin.meta.name, emojiStore, 'isEmojiDisabled', ((_, args) => this.onIsEmojiDisabled(args, emojiStore)));
    }
    onGetEmojiUnavailableReason(args, result) {
        if (!this.attachService.canAttach) return result;
        const EmojiDisabledReasons = this.modulesService.emojiDisabledReasons;
        const options = args[0];
        const isReactIntention = options?.intention === 0;
        if (isReactIntention) return result;
        if (result === EmojiDisabledReasons.DISALLOW_EXTERNAL) {
            const emojiId = options?.emoji?.id;
            if (emojiId === undefined) return result;
            this.attachService.externalEmotes.add(emojiId);
            result = null;
        } else if (result === EmojiDisabledReasons.PREMIUM_LOCKED || result === EmojiDisabledReasons.GUILD_SUBSCRIPTION_UNAVAILABLE) {
            result = null;
        }
        return result;
    }
    onIsEmojiDisabled(args, emojiStore) {
        const [emoji, channel, intention] = args;
        const reason = emojiStore.getEmojiUnavailableReason({
            emoji,
            channel,
            intention
        });
        return reason !== null;
    }
    stop() {
        BdApi.Patcher.unpatchAll(this.plugin.meta.name);
    }
}

class EmoteReplacerPlugin {
    settingsService;
    emoteService;
    completionsService;
    attachService;
    listenersService;
    gifProcessingService;
    modulesService;
    sendMessageService;
    htmlService;
    patchesService;
    meta;
    constructor(meta) {
        this.meta = meta;
        Logger.setLogger(meta.name);
    }
    start() {
        this.doStart().catch((error => {
            Logger.error(error);
        }));
    }
    async doStart() {
        const zeresPluginLibrary = window.ZeresPluginLibrary;
        this.showChangelogIfNeeded(zeresPluginLibrary);
        await this.startServicesAndPatches();
    }
    showChangelogIfNeeded(zeresPluginLibrary) {
        const currentVersionInfo = BdApi.Data.load(this.meta.name, CURRENT_VERSION_INFO_KEY) ?? {};
        if (currentVersionInfo.hasShownChangelog !== true || currentVersionInfo.version !== this.meta.version) {
            zeresPluginLibrary.Modals.showChangelogModal(`${this.meta.name} Changelog`, this.meta.version, PLUGIN_CHANGELOG);
            const newVersionInfo = {
                version: this.meta.version,
                hasShownChangelog: true
            };
            BdApi.Data.save(this.meta.name, CURRENT_VERSION_INFO_KEY, newVersionInfo);
        }
    }
    async startServicesAndPatches() {
        const zeresPluginLibrary = window.ZeresPluginLibrary;
        this.listenersService = new ListenersService(this, zeresPluginLibrary);
        await this.listenersService.start();
        this.settingsService = new SettingsService(this, zeresPluginLibrary);
        await this.settingsService.start(this.listenersService);
        this.modulesService = new ModulesService(this, zeresPluginLibrary);
        await this.modulesService.start();
        this.htmlService = new HtmlService(this, zeresPluginLibrary);
        await this.htmlService.start(this.modulesService);
        this.emoteService = new EmoteService(this, zeresPluginLibrary);
        await this.emoteService.start(this.listenersService, this.settingsService, this.htmlService);
        this.attachService = new AttachService(this, zeresPluginLibrary);
        await this.attachService.start(this.modulesService);
        this.completionsService = new CompletionsService(this, zeresPluginLibrary);
        await this.completionsService.start(this.emoteService, this.settingsService, this.modulesService, this.listenersService, this.htmlService, this.attachService);
        this.gifProcessingService = new GifProcessingService(this, zeresPluginLibrary);
        await this.gifProcessingService.start();
        this.sendMessageService = new SendMessageService(this, zeresPluginLibrary);
        await this.sendMessageService.start(this.emoteService, this.attachService, this.modulesService, this.settingsService, this.gifProcessingService);
        this.patchesService = new PatchesService(this, zeresPluginLibrary);
        await this.patchesService.start(this.attachService, this.completionsService, this.emoteService, this.modulesService);
    }
    observer(e) {
        if (!e.addedNodes.length || !(e.addedNodes[0] instanceof Element)) return;
        const elem = e.addedNodes[0];
        const modulesService = this.modulesService;
        if (!modulesService) return;
        const textAreaSelector = this.htmlService?.getClassSelector(modulesService.classes.TextArea.textArea);
        if (textAreaSelector !== undefined && elem.querySelector(textAreaSelector)) {
            this.listenersService?.requestAddListeners(CompletionsService.TAG);
        }
    }
    onSwitch() {
        this.completionsService?.destroyCompletions();
    }
    getSettingsPanel() {
        return this.settingsService?.getSettingsElement() ?? new HTMLElement;
    }
    stop() {
        this.patchesService?.stop();
        this.patchesService = undefined;
        this.sendMessageService?.stop();
        this.sendMessageService = undefined;
        this.gifProcessingService?.stop();
        this.gifProcessingService = undefined;
        this.completionsService?.stop();
        this.completionsService = undefined;
        this.attachService?.stop();
        this.attachService = undefined;
        this.emoteService?.stop();
        this.emoteService = undefined;
        this.htmlService?.stop();
        this.htmlService = undefined;
        this.modulesService?.stop();
        this.modulesService = undefined;
        this.settingsService?.stop();
        this.settingsService = undefined;
        this.listenersService?.stop();
        this.listenersService = undefined;
    }
}

const bdWindow = window;

var index = bdWindow.ZeresPluginLibrary === undefined ? RawPlugin : EmoteReplacerPlugin;

module.exports = index;
